{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_navbar = _resolveComponent(\"navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_navbar, {\n    id: \"navbar\"\n  }), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_navbar","id","_createElementVNode","_hoisted_1","_component_router_view"],"sources":["D:\\folderforsite\\src\\App.vue"],"sourcesContent":["<template>\r\n    <navbar id=\"navbar\"></navbar>\r\n    <div class=\"app\">\r\n        \r\n        <router-view></router-view>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\nimport Navbar from '@/components/Navbar';\r\nexport default {\r\n    components: {\r\n        Navbar\r\n    },\r\n    methods:{\r\n    }\r\n}\r\nwindow.addEventListener('scroll', () => {\r\n \r\n\r\n    const scrollOffset = window.pageYOffset;\r\n\r\n    const browserViewHeight = window.innerHeight;\r\n\r\n    const documentHeight = document.body.clientHeight\r\n    const totalAmountScrolled = scrollOffset + browserViewHeight\r\n\r\n    const sample = document.getElementById(\"navbar\"); \r\n    if (totalAmountScrolled > 0) {\r\n        sample.style.background = \"black\"\r\n    }\r\n    if (totalAmountScrolled = 0){\r\n        sample.style.background = \"red\"\r\n    }\r\n    \r\n \r\n})\r\n\r\n</script>\r\n\r\n<style>\r\n@import url(\"https://cdn.jsdelivr.net/npm/@xz/fonts@1/serve/ibm-plex-mono.min.css\");\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n.app {\r\n    \r\n}\r\n\r\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAK;;;;6DADhBC,YAAA,CAA6BC,iBAAA;IAArBC,EAAE,EAAC;EAAQ,IACnBC,mBAAA,CAGM,OAHNC,UAGM,GADFJ,YAAA,CAA2BK,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}