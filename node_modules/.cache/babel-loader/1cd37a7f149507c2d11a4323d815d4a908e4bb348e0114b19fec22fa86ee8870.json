{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostForm from \"@/components/PostForm\";\nimport PostList from \"@/components/PostList\";\nimport PostItem from \"@/components/PostItem\";\nimport axios from 'axios';\nexport default {\n  components: {\n    PostForm,\n    PostList,\n    PostItem\n  },\n  data() {\n    return {\n      dialogVisible: false\n    };\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    // changePage(pageNumber){\n    //     this.page = pageNumber\n    // },\n    async fetchPosts() {\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = response.data;\n      } catch (e) {\n        alert('Error');\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n    async loadMorePosts() {\n      try {\n        this.page += 1;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = [...this.posts, ...response.data];\n      } catch (e) {\n        alert('Error');\n      } finally {}\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n    // const option ={\n    //     rootMargin:'0px',\n    //     threshold:1.0\n    // }\n    // const callback = (entries,observer) => {\n    //     if(entries[0].isIntersecting && this.page<this.totalPages){\n    //         this.loadMorePosts()\n    //     }\n    // };\n    // const observer = new IntersectionObserver(callback,option);\n    // observer.observe(this.$refs.observer);\n  },\n\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]));\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  watch: {\n    // page(){\n    //     this.fetchPosts()\n    // }\n  }\n};","map":{"version":3,"names":["PostForm","PostList","PostItem","axios","components","data","dialogVisible","methods","createPost","post","posts","push","removePost","filter","p","id","showDialog","fetchPosts","isPostsLoading","response","get","params","_page","page","_limit","limit","totalPages","Math","ceil","headers","e","alert","loadMorePosts","mounted","computed","sortedPosts","sort","post1","post2","selectedSort","localeCompare","sortedAndSearchedPosts","title","toLowerCase","includes","searchQuery","watch"],"sources":["D:\\folderforsite\\src\\pages\\PostPagecomposition.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h1>\r\n        Page with posts\r\n    </h1>\r\n    <my-input\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Search\"\r\n        v-focus\r\n    />\r\n    <div class=\"app__btns\">\r\n        <my-button\r\n        @click=\"showDialog\"\r\n    >\r\n        Create Post\r\n    </my-button>\r\n    <my-select\r\n        v-model=\"selectedSort\"\r\n        :options=\"SortOptions\"\r\n    />\r\n    </div>\r\n    \r\n    <my-dialog v-model:show='dialogVisible'>\r\n        <post-form\r\n        @create=\"createPost\"\r\n        />\r\n    </my-dialog>\r\n    \r\n    <post-list\r\n    :posts=\"sortedAndSearchedPosts\"\r\n    @remove=\"removePost\"\r\n    v-if=\"!isPostsLoading\"\r\n    />\r\n    <div v-else>Now Loading . . .</div>\r\n    <div v-intersection=\"loadMorePosts\" class=\"observer\">\r\n\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport PostForm from \"@/components/PostForm\";\r\nimport PostList from \"@/components/PostList\";\r\nimport PostItem from \"@/components/PostItem\";\r\nimport axios from 'axios'\r\nexport default {\r\n    components: {\r\n        PostForm, PostList,PostItem\r\n    },\r\n    data() {\r\n        return{\r\n            dialogVisible:false,\r\n        }\r\n    },\r\n    methods: {\r\n        createPost(post) {\r\n            this.posts.push(post);\r\n            this.dialogVisible = false\r\n        },\r\n        removePost(post){\r\n            this.posts = this.posts.filter(p => p.id !== post.id)\r\n        },\r\n        showDialog(){\r\n            this.dialogVisible=true;\r\n        },\r\n        // changePage(pageNumber){\r\n        //     this.page = pageNumber\r\n        // },\r\n        async fetchPosts(){\r\n            try {\r\n                this.isPostsLoading = true;\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                    params:{\r\n                        _page:this.page,\r\n                        _limit:this.limit\r\n                    }\r\n                \r\n                })\r\n                this.totalPages = Math.ceil(response.headers['x-total-count']/this.limit)\r\n                this.posts = response.data;\r\n                \r\n                \r\n            } catch (e){\r\n                alert('Error')\r\n            } finally{\r\n                this.isPostsLoading = false;\r\n            }\r\n        },\r\n        async loadMorePosts(){\r\n            try {\r\n                this.page+=1;\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                    params:{\r\n                        _page:this.page,\r\n                        _limit:this.limit\r\n                    }\r\n                \r\n                })\r\n                this.totalPages = Math.ceil(response.headers['x-total-count']/this.limit)\r\n                this.posts =[...this.posts,...response.data];\r\n                \r\n                \r\n            } catch (e){\r\n                alert('Error')\r\n            } finally{\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.fetchPosts();\r\n        // const option ={\r\n        //     rootMargin:'0px',\r\n        //     threshold:1.0\r\n        // }\r\n        // const callback = (entries,observer) => {\r\n        //     if(entries[0].isIntersecting && this.page<this.totalPages){\r\n        //         this.loadMorePosts()\r\n        //     }\r\n        // };\r\n        // const observer = new IntersectionObserver(callback,option);\r\n        // observer.observe(this.$refs.observer);\r\n    },\r\n    computed:{\r\n        sortedPosts(){\r\n            return [...this.posts].sort((post1,post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]))\r\n        },\r\n        sortedAndSearchedPosts(){\r\n            return this.sortedPosts.filter(post =>post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n        }\r\n    },\r\n    watch:{\r\n        // page(){\r\n        //     this.fetchPosts()\r\n        // }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.app__btns{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 15px 0;\r\n}\r\n.page__wrapper{\r\n    display: flex;\r\n    margin-top: 15px;\r\n}\r\n.page{\r\n    border: 1px solid black;\r\n    padding: 10px;\r\n}\r\n.current-page{\r\n    border: 2px solid teal;\r\n}\r\n.observer{\r\n    opacity: 0;\r\n    height:30px;\r\n    background: green;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}