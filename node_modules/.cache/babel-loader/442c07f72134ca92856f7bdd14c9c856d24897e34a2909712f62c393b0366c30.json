{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, resolveDirective as _resolveDirective, createVNode as _createVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-da527d10\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \" Page with posts \", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"app__btns\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"observer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  const _directive_focus = _resolveDirective(\"focus\");\n  const _directive_intersection = _resolveDirective(\"intersection\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createVNode(_component_my_input, {\n    modelValue: _ctx.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchQuery = $event),\n    placeholder: \"Search\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), [[_directive_focus]]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_my_button, {\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Create Post \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" <my-select\\r\\n        v-model=\\\"selectedSort\\\"\\r\\n        :options=\\\"SortOptions\\\"\\r\\n    /> \")]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[1] || (_cache[1] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: $options.createPost\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), !_ctx.isPostsLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: _ctx.sortedAndSearchedPosts,\n    onRemove: $options.removePost\n  }, null, 8 /* PROPS */, [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Now Loading . . .\")), _withDirectives(_createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), [[_directive_intersection, _ctx.loadMorePosts]])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_my_input","_ctx","searchQuery","$event","placeholder","_hoisted_2","_component_my_button","onClick","$options","showDialog","_createCommentVNode","_component_my_dialog","show","$data","dialogVisible","_component_post_form","onCreate","createPost","isPostsLoading","_createBlock","_component_post_list","posts","sortedAndSearchedPosts","onRemove","removePost","_hoisted_3","_hoisted_4","loadMorePosts"],"sources":["D:\\folderforsite\\src\\pages\\PostPagewithstore.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h1>\r\n        Page with posts\r\n    </h1>\r\n    <my-input\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Search\"\r\n        v-focus\r\n    />\r\n    <div class=\"app__btns\">\r\n        <my-button\r\n        @click=\"showDialog\"\r\n    >\r\n        Create Post\r\n    </my-button>\r\n    <!-- <my-select\r\n        v-model=\"selectedSort\"\r\n        :options=\"SortOptions\"\r\n    /> -->\r\n    </div>\r\n    \r\n    <my-dialog v-model:show='dialogVisible'>\r\n        <post-form\r\n        @create=\"createPost\"\r\n        />\r\n    </my-dialog>\r\n    \r\n    <post-list\r\n    :posts=\"sortedAndSearchedPosts\"\r\n    @remove=\"removePost\"\r\n    v-if=\"!isPostsLoading\"\r\n    />\r\n    <div v-else>Now Loading . . .</div>\r\n    <div v-intersection=\"loadMorePosts\" class=\"observer\">\r\n\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport PostForm from \"@/components/PostForm\";\r\nimport PostList from \"@/components/PostList\";\r\nimport PostItem from \"@/components/PostItem\";\r\nimport axios from 'axios';\r\nimport {mapState, mapGetters, mapActions,mapMutations} from 'vuex'\r\nexport default {\r\n    components: {\r\n        PostForm, PostList,PostItem\r\n    },\r\n    data() {\r\n        return{\r\n            dialogVisible:false,\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations({\r\n            setPage:'post/setPage'\r\n        }),\r\n        ...mapActions({\r\n            loadMorePosts: 'post/loadMorePosts',\r\n            fetchPosts: 'post/fetchPosts'\r\n        }),\r\n        createPost(post) {\r\n            this.posts.push(post);\r\n            this.dialogVisible = false\r\n        },\r\n        removePost(post){\r\n            this.posts = this.posts.filter(p => p.id !== post.id)\r\n        },\r\n        showDialog(){\r\n            this.dialogVisible=true;\r\n        },\r\n        // changePage(pageNumber){\r\n        //     this.page = pageNumber\r\n        // },\r\n        \r\n    },\r\n    mounted(){\r\n        //this.fetchPosts();\r\n        // const option ={\r\n        //     rootMargin:'0px',\r\n        //     threshold:1.0\r\n        // }\r\n        // const callback = (entries,observer) => {\r\n        //     if(entries[0].isIntersecting && this.page<this.totalPages){\r\n        //         this.loadMorePosts()\r\n        //     }\r\n        // };\r\n        // const observer = new IntersectionObserver(callback,option);\r\n        // observer.observe(this.$refs.observer);\r\n    },\r\n    computed:{\r\n        ...mapState({\r\n            posts: state => state.post.posts,\r\n            isPostsLoading: false,\r\n            selectedSort:state => state.post.posts,\r\n            searchQuery:state => state.post.posts,\r\n            page:state => state.post.posts,\r\n            limit:state => state.post.posts,\r\n            totalPages:state => state.post.posts,\r\n            SortOptions:state => state.post.posts\r\n        }),\r\n        ...mapGetters({\r\n            sortedPosts:'post/sortedPosts',\r\n            sortedAndSearchedPosts:'post/sortedAndSearchedPosts'\r\n        }),\r\n    },\r\n    watch:{\r\n        // page(){\r\n        //     this.fetchPosts()\r\n        // }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.app__btns{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 15px 0;\r\n}\r\n.page__wrapper{\r\n    display: flex;\r\n    margin-top: 15px;\r\n}\r\n.page{\r\n    border: 1px solid black;\r\n    padding: 10px;\r\n}\r\n.current-page{\r\n    border: 2px solid teal;\r\n}\r\n.observer{\r\n    opacity: 0;\r\n    height:30px;\r\n    background: green;\r\n}\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAEK,YAFD,mBAEJ;;EAMKC,KAAK,EAAC;AAAW;;;;;EAwBcA,KAAK,EAAC;AAAU;;;;;;;;;uBAjCxDC,mBAAA,CAoCM,cAnCFC,UAEK,E,gBACLC,YAAA,CAIEC,mBAAA;gBAHWC,IAAA,CAAAC,WAAW;+DAAXD,IAAA,CAAAC,WAAW,GAAAC,MAAA;IACpBC,WAAW,EAAC;kEAGhBT,mBAAA,CAUM,OAVNU,UAUM,GATFN,YAAA,CAIQO,oBAAA;IAHPC,OAAK,EAAEC,QAAA,CAAAC;EAAU;sBACrB,MAED,C,iBAFC,eAED,E;;kCACAC,mBAAA,kGAGM,C,GAGNX,YAAA,CAIYY,oBAAA;IAJOC,IAAI,EAAEC,KAAA,CAAAC,aAAa;yDAAbD,KAAA,CAAAC,aAAa,GAAAX,MAAA;;sBAClC,MAEE,CAFFJ,YAAA,CAEEgB,oBAAA;MADDC,QAAM,EAAER,QAAA,CAAAS;IAAU,sC;;gCAOhBhB,IAAA,CAAAiB,cAAc,I,cAHrBC,YAAA,CAIEC,oBAAA;;IAHDC,KAAK,EAAEpB,IAAA,CAAAqB,sBAAsB;IAC7BC,QAAM,EAAEf,QAAA,CAAAgB;mEAGT3B,mBAAA,CAAmC,OAAA4B,UAAA,EAAvB,mBAAiB,I,gBAC7B9B,mBAAA,CAEM,OAFN+B,UAEM,gC,0BAFezB,IAAA,CAAA0B,aAAa,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}