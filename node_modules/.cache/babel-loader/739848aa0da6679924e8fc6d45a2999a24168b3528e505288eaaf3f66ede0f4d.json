{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Page with posts \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"app__btns\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_my_button, {\n    onClick: _ctx.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Create Post \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: _ctx.selectedSort,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedSort = $event),\n    options: _ctx.SortOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: _ctx.dialogVisible,\n    \"onUpdate:show\": _cache[1] || (_cache[1] = $event => _ctx.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: _ctx.createPost\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), !_ctx.isPostsLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: _ctx.posts,\n    onRemove: _ctx.removePost\n  }, null, 8 /* PROPS */, [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Now Loading . . .\"))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_my_button","onClick","_ctx","showDialog","_component_my_select","selectedSort","$event","options","SortOptions","_component_my_dialog","show","dialogVisible","_component_post_form","onCreate","createPost","isPostsLoading","_createBlock","_component_post_list","posts","onRemove","removePost","_hoisted_4"],"sources":["D:\\folderforsite\\src\\App.vue"],"sourcesContent":["<template>\r\n <div class=\"app\">\r\n    <h1>\r\n        Page with posts\r\n    </h1>\r\n    <div class=\"app__btns\">\r\n        <my-button\r\n        @click=\"showDialog\"\r\n    >\r\n        Create Post\r\n    </my-button>\r\n    <my-select\r\n        v-model=\"selectedSort\"\r\n        :options=\"SortOptions\"\r\n    />\r\n    </div>\r\n    \r\n    <my-dialog v-model:show='dialogVisible'>\r\n        <post-form\r\n        @create=\"createPost\"\r\n        />\r\n    </my-dialog>\r\n   \r\n    <post-list\r\n    :posts=\"posts\"\r\n    @remove=\"removePost\"\r\n    v-if=\"!isPostsLoading\"\r\n    />\r\n    <div v-else>Now Loading . . .</div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport PostForm from \"./components/PostForm\";\r\nimport PostList from \"./components/PostList\";\r\nimport PostItem from \"./components/PostItem\";\r\nimport axios from 'axios'\r\nexport default {\r\n    components: {\r\n        PostForm, PostList,PostItem\r\n    },\r\n    data() {\r\n        return{\r\n            posts: [],\r\n            dialogVisible:false,\r\n            isPostsLoading: false,\r\n            selectedSort:'',\r\n            SortOptions:[\r\n                {value:'title', name:'By Name'},\r\n                {value:'body', name:'By Description'},\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        createPost(post) {\r\n            this.posts.push(post);\r\n            this.dialogVisible = false\r\n        },\r\n        removePost(post){\r\n            this.posts = this.posts.filter(p => p.id !== post.id)\r\n        },\r\n        showDialog(){\r\n            this.dialogVisible=true;\r\n        },\r\n        async fetchPosts(){\r\n             try {\r\n                this.isPostsLoading = true;\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10')\r\n                this.posts = response.data;\r\n                \r\n                \r\n             } catch (e){\r\n                alert('Error')\r\n             } finally{\r\n                this.isPostsLoading = false;\r\n             }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.fetchPosts();\r\n    },\r\n    watch:{\r\n        selectedSort(newValue){\r\n            this.posts.sort((a,b) =>)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n.app {\r\n    padding: 20px;\r\n}\r\n.app__btns{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 15px 0;\r\n}\r\n</style>"],"mappings":";;EACMA,KAAK,EAAC;AAAK;gCACbC,mBAAA,CAEK,YAFD,mBAEJ;;EACKD,KAAK,EAAC;AAAW;;;;;;;;;;uBAJzBE,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BHC,UAEK,EACLH,mBAAA,CAUM,OAVNI,UAUM,GATFC,YAAA,CAIQC,oBAAA;IAHPC,OAAK,EAAEC,IAAA,CAAAC;EAAU;sBACrB,MAED,C,iBAFC,eAED,E;;kCACAJ,YAAA,CAGEK,oBAAA;gBAFWF,IAAA,CAAAG,YAAY;+DAAZH,IAAA,CAAAG,YAAY,GAAAC,MAAA;IACpBC,OAAO,EAAEL,IAAA,CAAAM;wDAIdT,YAAA,CAIYU,oBAAA;IAJOC,IAAI,EAAER,IAAA,CAAAS,aAAa;yDAAbT,IAAA,CAAAS,aAAa,GAAAL,MAAA;;sBAClC,MAEE,CAFFP,YAAA,CAEEa,oBAAA;MADDC,QAAM,EAAEX,IAAA,CAAAY;IAAU,sC;;gCAOhBZ,IAAA,CAAAa,cAAc,I,cAHrBC,YAAA,CAIEC,oBAAA;;IAHDC,KAAK,EAAEhB,IAAA,CAAAgB,KAAK;IACZC,QAAM,EAAEjB,IAAA,CAAAkB;mEAGTzB,mBAAA,CAAmC,OAAA0B,UAAA,EAAvB,mBAAiB,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}